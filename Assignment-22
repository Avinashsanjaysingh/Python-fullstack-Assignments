1. Write a recursive python function to calculate sum of first N natural numbers.
def print_natural_numbers(n):
    if n > 0:
        print_natural_numbers(n - 1)
        print(n)

# Calling the function
print_natural_numbers(5)

2. Write a recursive python function to calculate sum of first N odd natural numbers.
def print_natural_numbers_reverse(n):
    if n > 0:
        print(n)
        print_natural_numbers_reverse(n - 1)

# Calling the function
print_natural_numbers_reverse(5)

3. Write a recursive python function to calculate sum of first N even natural numbers.
def print_odd_numbers(n):
    if n > 0:
        print_odd_numbers(n - 1)
        if n % 2 != 0:
            print(n)

# Calling the function
print_odd_numbers(5)

4. Write a recursive python function to calculate sum of squares of first N natural numbers.
def print_odd_numbers_reverse(n):
    if n > 0:
        if n % 2 != 0:
            print(n)
        print_odd_numbers_reverse(n - 1)

# Calling the function
print_odd_numbers_reverse(5)

5. Write a recursive python function to calculate sum of cubes of first N natural numbers.
def print_even_numbers(n):
    if n > 0:
        print_even_numbers(n - 1)
        if n % 2 == 0:
            print(n)

# Calling the function
print_even_numbers(5)

6. Write a recursive python function to calculate the factorial of a number.
def print_even_numbers_reverse(n):
    if n > 0:
        if n % 2 == 0:
            print(n)
        print_even_numbers_reverse(n - 1)

# Calling the function
print_even_numbers_reverse(5)

7. Write a recursive python function to calculate sum of the digits of a given number.
def print_square_of_natural_numbers(n):
    if n > 0:
        print_square_of_natural_numbers(n - 1)
        print(n ** 2)

# Calling the function
print_square_of_natural_numbers(5)

8. Write a recursive python function to print binary of a given decimal number.
def print_cube_of_natural_numbers(n):
    if n > 0:
        print_cube_of_natural_numbers(n - 1)
        print(n ** 3)

# Calling the function
print_cube_of_natural_numbers(5)

9. Write a recursive python function to print octal of a given decimal number.
def print_multiples_of_number(n, m):
    if n > 0:
        print_multiples_of_number(n - 1, m)
        print(n * m)

# Calling the function
print_multiples_of_number(5, 3)

10. Write a recursive python function to find the Nth term of the Fibonacci series.
def print_number_in_reverse(number):
    if number > 0:
        print(number % 10, end='')
        print_number_in_reverse(number // 10)

# Calling the function
print_number_in_reverse(12345)
